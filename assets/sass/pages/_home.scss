@use '../utils/mixins' as *;
@use '../utils/variables' as *;

.main{
  position: relative;
  width: 100%;
  overflow: auto;
  height: auto;
  display: flex;
  flex-direction: column;
  background: var(--color-light);

  /*
  * Set top placement equivalent to header height on mobile
  * top: var(--row-{$i}-mobile
  */
  @include dynamic-prop($prop: top);

  @include device(tablet-and-up){
    overflow: hidden;
    /*
    * Set top placement equivalent to header height on desktop
    * top: var(--row-{$i}-desktop
    */
    @include dynamic-prop($device: desktop, $prop: top);

    /*
    * Set height to 100vh - header
    * height: calc(100vh - var(--row-{$i}-desktop));
    */
    @include dynamic-calc($device: desktop);
  }
}

.section{
  position: relative;
  display: flex;
  flex-direction: column;
  transition: all var(--transition);
  will-change: height;

  /*
  * Defines the height of a closed section on mobile
  * height: var(--row-{$i}-mobile
  */
  @include dynamic-prop();

  @include device(tablet-and-up){
    /*
    * Defines the height of a closed section on desktop
    * height: var(--row-{$i}-mobile
    */
    @include dynamic-prop(desktop);
  }

  &__heading{
    cursor: pointer;
    white-space: nowrap;

    &__title{
      flex: 1;
    }

    &__control{
      height: 100%;
      transition: all 0.25s ease-in-out;
      opacity: 0;
      will-change: opacity;

      &:not(.only\:md){
        display: flex;
      }

      &.ctrl--prev{
        transform: translateX(rem(4px));
        will-change: transform;
        transition: transform var(--transition);

        @include device(laptop-and-up){
          transform: translateX(rem(10px));
        }
      }

      &.ctrl--next{
        transform: translateX(rem(-4px));
        will-change: transform;
        transition: transform var(--transition);

        @include device(laptop-and-up){
          transform: translateX(rem(-10px));
        }
      }

      svg{
        width: rem(28px);

        @include device(laptop-and-up){
          transform: translateY(rem(2px));
          width: vw(26px);
        }
      }
    }
  }

  &__content{
    overflow: hidden;
    position: relative;

    &:after{
      content: '';
      position: absolute;
      width: 100%;
      top: 0;
      height: 1px;
      background: var(--color-light);
    }
  }

  &--active{
    &.section{
      /*
        * Defines the height of an active section on mobile
        * The active section must be 100vh minus the header size so that the other sections extend beyond the viewport.
        * height: calc(100vh - var(--row-{$i}-desktop));
        */
      @include dynamic-calc();

      @include device(tablet-and-up){
        /*
        * Defines the height of an active section on desktop
        * To ensure that all site content takes up 100% of the viewport height we use $n
        * $n = Inactive sections + Header
        * height: calc(100vh - $n * var(--row-{$i}-desktop));
        */
        @include dynamic-calc($device: desktop, $multiplier: 6);
      }
    }
  }

  /* Content of active section */
  &--active &{
    &__heading__control{
      opacity: 1;

      &.ctrl--prev,
      &.ctrl--next{
        transform: translateX(0);
      }
    }
  }

  /* Content of inactive sections */
  &:not(&--active) & {
    &__heading:hover * {
      font-family: "Mondwest-Bold", serif;
      font-weight: 700;
      font-size: rem(22px);

      @include device(laptop-and-up){
        font-size: vw(22px);
      }
    }
  }

  &:after{
    content: '';
    position: absolute;
    width: 100%;
    bottom: 0;
    height: 2px;
    background: var(--color-black);
  }
}